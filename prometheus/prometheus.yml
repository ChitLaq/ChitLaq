# ChitLaq M1 MVP - Prometheus Configuration
# Comprehensive monitoring setup for production-grade observability
# Generated by PROMPT 1.4 - Monitoring & Observability Stack

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'chitlaq-mvp'
    environment: 'production'
    region: 'eu-central'

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093
      timeout: 10s
      api_version: v2

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
  - "/etc/prometheus/rules/*.yml"
  - "/etc/prometheus/alerts/*.yml"

# Scrape configuration
scrape_configs:
  # ===============================
  # INFRASTRUCTURE MONITORING
  # ===============================
  
  # Prometheus itself
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 30s
    metrics_path: /metrics

  # Node Exporter - System metrics
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['node-exporter:9100']
    scrape_interval: 15s
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        regex: '([^:]+):.*'
        replacement: '${1}'

  # Docker daemon metrics
  - job_name: 'docker'
    static_configs:
      - targets: ['docker:9323']
    scrape_interval: 30s
    metrics_path: /metrics

  # ===============================
  # DATABASE MONITORING
  # ===============================
  
  # PostgreSQL metrics
  - job_name: 'postgres'
    static_configs:
      - targets: ['postgres-exporter:9187']
    scrape_interval: 15s
    metrics_path: /metrics

  # Redis metrics
  - job_name: 'redis'
    static_configs:
      - targets: ['redis-exporter:9121']
    scrape_interval: 15s
    metrics_path: /metrics

  # ===============================
  # APPLICATION MONITORING
  # ===============================
  
  # Nginx metrics
  - job_name: 'nginx'
    static_configs:
      - targets: ['nginx:9113']
    scrape_interval: 15s
    metrics_path: /metrics

  # Supabase services
  - job_name: 'supabase-auth'
    static_configs:
      - targets: ['supabase-auth:9999']
    scrape_interval: 15s
    metrics_path: /metrics

  - job_name: 'supabase-realtime'
    static_configs:
      - targets: ['supabase-realtime:4000']
    scrape_interval: 15s
    metrics_path: /metrics

  - job_name: 'supabase-storage'
    static_configs:
      - targets: ['supabase-storage:5000']
    scrape_interval: 15s
    metrics_path: /metrics

  # ===============================
  # CUSTOM APPLICATION SERVICES
  # ===============================
  
  # API Gateway (Fastify)
  - job_name: 'api-gateway'
    static_configs:
      - targets: ['api-gateway:3001']
    scrape_interval: 10s
    metrics_path: /metrics

  # Realtime Service (Bun + uWebSockets)
  - job_name: 'realtime-service'
    static_configs:
      - targets: ['realtime-service:3002']
    scrape_interval: 10s
    metrics_path: /metrics

  # Feed Algorithm Service (Go)
  - job_name: 'feed-service'
    static_configs:
      - targets: ['feed-service:3003']
    scrape_interval: 15s
    metrics_path: /metrics

  # Search Service (Rust)
  - job_name: 'search-service'
    static_configs:
      - targets: ['search-service:3004']
    scrape_interval: 15s
    metrics_path: /metrics

  # Web Application (Next.js)
  - job_name: 'web-app'
    static_configs:
      - targets: ['web-app:3000']
    scrape_interval: 30s
    metrics_path: /api/metrics

  # Admin Panel
  - job_name: 'admin-panel'
    static_configs:
      - targets: ['admin-panel:3005']
    scrape_interval: 30s
    metrics_path: /api/metrics

  # ===============================
  # MONITORING STACK
  # ===============================
  
  # Grafana
  - job_name: 'grafana'
    static_configs:
      - targets: ['grafana:3000']
    scrape_interval: 30s
    metrics_path: /metrics

  # Alertmanager
  - job_name: 'alertmanager'
    static_configs:
      - targets: ['alertmanager:9093']
    scrape_interval: 30s
    metrics_path: /metrics

  # Loki
  - job_name: 'loki'
    static_configs:
      - targets: ['loki:3100']
    scrape_interval: 30s
    metrics_path: /metrics

  # Jaeger (Tracing)
  - job_name: 'jaeger'
    static_configs:
      - targets: ['jaeger:14269']
    scrape_interval: 30s
    metrics_path: /metrics

  # ===============================
  # BUSINESS METRICS
  # ===============================
  
  # Custom business metrics endpoint
  - job_name: 'business-metrics'
    static_configs:
      - targets: ['business-metrics:3006']
    scrape_interval: 60s
    metrics_path: /metrics

  # ===============================
  # HEALTH CHECKS
  # ===============================
  
  # Health check endpoints
  - job_name: 'health-checks'
    static_configs:
      - targets: 
        - 'api-gateway:3001/health'
        - 'realtime-service:3002/health'
        - 'feed-service:3003/health'
        - 'search-service:3004/health'
        - 'web-app:3000/api/health'
    scrape_interval: 30s
    metrics_path: /health
    relabel_configs:
      - source_labels: [__address__]
        target_label: service
        regex: '([^:]+):.*'
        replacement: '${1}'

  # ===============================
  # BLACKBOX MONITORING
  # ===============================
  
  # External endpoint monitoring
  - job_name: 'blackbox-http'
    metrics_path: /probe
    params:
      module: [http_2xx]
    static_configs:
      - targets:
        - https://chitlaq.com
        - https://api.chitlaq.com/health
        - https://admin.chitlaq.com/health
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter:9115

  # DNS monitoring
  - job_name: 'blackbox-dns'
    metrics_path: /probe
    params:
      module: [dns_udp]
    static_configs:
      - targets:
        - chitlaq.com
        - api.chitlaq.com
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter:9115

  # ===============================
  # SERVICE DISCOVERY
  # ===============================
  
  # Docker service discovery
  - job_name: 'docker-services'
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 30s
        filters:
          - name: label
            values: ["prometheus.io/scrape=true"]
    relabel_configs:
      - source_labels: [__meta_docker_container_name]
        target_label: container_name
      - source_labels: [__meta_docker_container_label_prometheus_io_scrape]
        target_label: __tmp_prometheus_scrape
        regex: true
      - source_labels: [__meta_docker_container_label_prometheus_io_path]
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_docker_container_label_prometheus_io_port]
        target_label: __address__
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
      - action: keep
        source_labels: [__tmp_prometheus_scrape]
        regex: true

# ===============================
# REMOTE WRITE CONFIGURATION
# ===============================

# Optional: Remote write to external storage
# remote_write:
#   - url: "https://prometheus-remote-write-endpoint/api/v1/write"
#     basic_auth:
#       username: "username"
#       password: "password"
#     queue_config:
#       max_samples_per_send: 1000
#       batch_send_deadline: 5s
#       max_retries: 10
#       min_backoff: 30ms
#       max_backoff: 100ms

# ===============================
# STORAGE CONFIGURATION
# ===============================

# Storage configuration for production
storage:
  tsdb:
    retention.time: 30d
    retention.size: 10GB
    wal-compression: true
    min-block-duration: 2h
    max-block-duration: 25h

# ===============================
# WEB CONFIGURATION
# ===============================

web:
  listen_address: '0.0.0.0:9090'
  external_url: 'https://monitoring.chitlaq.com'
  route_prefix: '/'
  enable_remote_write_receiver: true
  enable_admin_api: true
  enable_lifecycle: true
  web_external_url: 'https://monitoring.chitlaq.com'
  web_route_prefix: '/'
  web_user_assets: '/etc/prometheus/web'
  web_enable_local_admin: false
  web_console_templates: '/etc/prometheus/consoles'
  web_console_libraries: '/etc/prometheus/console_libraries'
  web_page_title: 'ChitLaq Monitoring'
  web_cors_origin: '.*'
  web_max_connections: 512
  web_read_timeout: 30s
  web_read_header_timeout: 10s
  web_write_timeout: 30s
  web_idle_timeout: 120s

# ===============================
# QUERY CONFIGURATION
# ===============================

query:
  lookback_delta: 5m
  max_concurrency: 20
  max_samples: 50000000
  timeout: 2m

# ===============================
# RULES CONFIGURATION
# ===============================

rules:
  alert:
    for_outage_tolerance: 1h
    for_grace_period: 10m
    resend_delay: 1m
