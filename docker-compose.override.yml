# ChitLaq M1 MVP - Development Override
# This file extends docker-compose.yml for development environment
# Usage: docker-compose up (automatically includes override)

version: '3.8'

services:
  # Development overrides for PostgreSQL
  postgres:
    ports:
      - "5432:5432"  # Expose to host for development tools
    environment:
      POSTGRES_DB: chitlaq_dev
      POSTGRES_USER: chitlaq_dev
      POSTGRES_PASSWORD: chitlaq_dev_password
    volumes:
      - ./supabase/dev-migrations:/docker-entrypoint-initdb.d/dev:ro
      - ./supabase/seed-data:/docker-entrypoint-initdb.d/seed:ro

  # Development overrides for Redis
  redis:
    ports:
      - "6379:6379"  # Expose to host for development tools
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru

  # Development overrides for Kong
  kong:
    ports:
      - "8000:8000"
      - "8001:8001"  # Admin API
      - "8443:8443"
    volumes:
      - ./supabase/kong-dev.yml:/var/lib/kong/kong.yml:ro

  # Development overrides for Supabase Studio
  studio:
    ports:
      - "3010:3010"  # Expose to host for development access
    environment:
      SUPABASE_URL: http://localhost:8000
      STUDIO_PG_META_URL: http://localhost:8080

  # Development overrides for Prometheus
  prometheus:
    ports:
      - "9090:9090"  # Expose to host for development access
    volumes:
      - ./monitoring/prometheus-dev.yml:/etc/prometheus/prometheus.yml:ro

  # Development overrides for Grafana
  grafana:
    ports:
      - "3000:3000"  # Expose to host for development access
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_USERS_ALLOW_SIGN_UP: "true"
      GF_SERVER_ROOT_URL: http://localhost:3000
      GF_LOG_LEVEL: debug

  # Development overrides for Nginx
  nginx:
    volumes:
      - ./nginx/nginx-dev.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/sites-available-dev:/etc/nginx/sites-available:ro
    ports:
      - "80:80"

  # Additional development services
  
  # MailHog for email testing
  mailhog:
    image: mailhog/mailhog:v1.0.1
    container_name: chitlaq_mailhog
    restart: unless-stopped
    ports:
      - "1025:1025"  # SMTP server
      - "8025:8025"  # Web UI
    networks:
      - chitlaq_network

  # Redis Commander for Redis management
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: chitlaq_redis_commander
    restart: unless-stopped
    environment:
      REDIS_HOSTS: local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - chitlaq_network

  # pgAdmin for PostgreSQL management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: chitlaq_pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@chitlaq.dev
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - chitlaq_network

  # Jaeger for distributed tracing (development)
  jaeger:
    image: jaegertracing/all-in-one:1.50
    container_name: chitlaq_jaeger
    restart: unless-stopped
    environment:
      COLLECTOR_OTLP_ENABLED: true
    ports:
      - "16686:16686"  # Jaeger UI
      - "14268:14268"  # Jaeger collector HTTP
      - "4317:4317"    # OTLP gRPC receiver
      - "4318:4318"    # OTLP HTTP receiver
    networks:
      - chitlaq_network

volumes:
  pgadmin_data:
    driver: local
