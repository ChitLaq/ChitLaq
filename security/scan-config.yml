# ChitLaq M1 MVP - Security Scanning Configuration
# Generated by PROMPT 1.5 - CI/CD Pipeline & Automated Deployment
# Senior DevOps Engineer - 15+ years CI/CD and release management experience

# Security scanning configuration for comprehensive vulnerability assessment
# Includes SAST, DAST, dependency scanning, and container security

# Snyk Configuration
snyk:
  # API token for Snyk (set via environment variable SNYK_TOKEN)
  api_token: "${SNYK_TOKEN}"
  
  # Severity thresholds
  severity_threshold: "high"
  
  # File patterns to scan
  include_patterns:
    - "**/*.js"
    - "**/*.ts"
    - "**/*.json"
    - "**/*.go"
    - "**/*.rs"
    - "**/package.json"
    - "**/package-lock.json"
    - "**/yarn.lock"
    - "**/go.mod"
    - "**/go.sum"
    - "**/Cargo.toml"
    - "**/Cargo.lock"
  
  # Exclude patterns
  exclude_patterns:
    - "node_modules/**"
    - "dist/**"
    - "build/**"
    - "coverage/**"
    - "**/*.test.js"
    - "**/*.spec.js"
    - "**/*.test.ts"
    - "**/*.spec.ts"
  
  # Scan options
  options:
    - "--json"
    - "--severity-threshold=high"
    - "--fail-on=all"
    - "--detection-depth=6"
    - "--prune-repeated-subdependencies"
  
  # Custom policies
  policies:
    - "security-policies/snyk-policy.yml"

# Trivy Configuration
trivy:
  # Scan types
  scan_types:
    - "vuln"      # Vulnerability scanning
    - "config"    # Configuration scanning
    - "secret"    # Secret scanning
    - "license"   # License scanning
  
  # Severity levels
  severity_levels:
    - "CRITICAL"
    - "HIGH"
    - "MEDIUM"
  
  # Output formats
  output_formats:
    - "json"
    - "sarif"
    - "table"
  
  # Scan targets
  targets:
    filesystem:
      path: "."
      exclude_patterns:
        - "node_modules"
        - ".git"
        - "dist"
        - "build"
        - "coverage"
        - "*.log"
    
    containers:
      images:
        - "chitlaq/api-gateway:latest"
        - "chitlaq/web-app:latest"
        - "chitlaq/realtime-service:latest"
        - "chitlaq/feed-service:latest"
        - "chitlaq/search-service:latest"
        - "chitlaq/admin-panel:latest"
        - "postgres:15"
        - "redis:7"
        - "nginx:alpine"
        - "prometheus/prometheus:latest"
        - "grafana/grafana:latest"
    
    repositories:
      - "https://github.com/chitlaq/chitlaq"
  
  # Configuration files to scan
  config_files:
    - "docker-compose.yml"
    - "Dockerfile*"
    - "nginx.conf"
    - "prometheus.yml"
    - "grafana.ini"
    - ".env*"
    - "package.json"
    - "go.mod"
    - "Cargo.toml"
  
  # Custom rules
  custom_rules:
    - "security-rules/trivy-custom-rules.yml"

# CodeQL Configuration
codeql:
  # Languages to analyze
  languages:
    - "javascript"
    - "typescript"
    - "go"
    - "rust"
  
  # Query suites
  query_suites:
    - "security-and-quality"
    - "security-extended"
    - "security-and-quality.qls"
  
  # Custom queries
  custom_queries:
    - "security-queries/custom-security.ql"
    - "security-queries/custom-quality.ql"
  
  # Analysis options
  analysis_options:
    timeout: 3600  # 1 hour timeout
    threads: 4
    memory: "8G"
  
  # Exclude patterns
  exclude_patterns:
    - "node_modules/**"
    - "dist/**"
    - "build/**"
    - "coverage/**"
    - "**/*.test.js"
    - "**/*.spec.js"

# OWASP ZAP Configuration
owasp_zap:
  # Scan types
  scan_types:
    - "baseline"    # Quick scan
    - "full"        # Comprehensive scan
    - "api"         # API-specific scan
  
  # Target URLs
  targets:
    staging: "https://staging.chitlaq.com"
    production: "https://chitlaq.com"
  
  # Scan policies
  policies:
    - "Default Policy"
    - "API Security Policy"
    - "OWASP Top 10 Policy"
  
  # Authentication
  authentication:
    type: "form"
    login_url: "https://chitlaq.com/login"
    username_field: "email"
    password_field: "password"
    username: "${TEST_USERNAME}"
    password: "${TEST_PASSWORD}"
  
  # Scan options
  options:
    - "--hook=/zap/auth_hook.py"
    - "--output-format=json"
    - "--output-file=zap-results.json"
    - "--level=HIGH"
    - "--progress"
  
  # Exclude patterns
  exclude_patterns:
    - ".*\\.css"
    - ".*\\.js"
    - ".*\\.png"
    - ".*\\.jpg"
    - ".*\\.gif"
    - ".*\\.ico"

# Semgrep Configuration
semgrep:
  # Rulesets
  rulesets:
    - "p/security-audit"
    - "p/secrets"
    - "p/owasp-top-ten"
    - "p/javascript"
    - "p/typescript"
    - "p/go"
    - "p/rust"
  
  # Custom rules
  custom_rules:
    - "security-rules/semgrep-custom-rules.yml"
  
  # Scan options
  options:
    - "--json"
    - "--severity=ERROR"
    - "--severity=WARNING"
    - "--severity=INFO"
    - "--max-target-bytes=1000000"
    - "--timeout=300"
  
  # Exclude patterns
  exclude_patterns:
    - "node_modules"
    - "dist"
    - "build"
    - "coverage"
    - "*.test.js"
    - "*.spec.js"
    - "*.test.ts"
    - "*.spec.ts"

# Bandit Configuration (Python security linter)
bandit:
  # Severity levels
  severity_levels:
    - "HIGH"
    - "MEDIUM"
  
  # Confidence levels
  confidence_levels:
    - "HIGH"
    - "MEDIUM"
  
  # Exclude tests
  exclude_tests:
    - "B101"  # Skip assert_used test
    - "B601"  # Skip shell injection test
  
  # Output formats
  output_formats:
    - "json"
    - "txt"
    - "xml"

# Gosec Configuration (Go security scanner)
gosec:
  # Scan rules
  rules:
    - "all"
  
  # Exclude rules
  exclude_rules:
    - "G104"  # Audit errors not checked
  
  # Output formats
  output_formats:
    - "json"
    - "sarif"
    - "text"
  
  # Scan options
  options:
    - "-fmt=json"
    - "-out=gosec-results.json"
    - "-severity=high"
    - "-confidence=high"

# Cargo Audit Configuration (Rust security scanner)
cargo_audit:
  # Scan options
  options:
    - "--deny=warnings"
    - "--json"
    - "--output=cargo-audit-results.json"
  
  # Advisory database
  advisory_db: "https://github.com/RustSec/advisory-db"

# NPM Audit Configuration
npm_audit:
  # Audit levels
  audit_levels:
    - "moderate"
    - "high"
    - "critical"
  
  # Output formats
  output_formats:
    - "json"
    - "table"
  
  # Fix options
  fix_options:
    - "--audit-level=moderate"
    - "--force"

# Docker Security Scanning
docker_security:
  # Scan options
  options:
    - "--severity=HIGH,CRITICAL"
    - "--format=json"
    - "--output=docker-security-results.json"
  
  # Scan types
  scan_types:
    - "vulnerabilities"
    - "secrets"
    - "malware"
    - "compliance"
  
  # Exclude patterns
  exclude_patterns:
    - "*.log"
    - "*.tmp"
    - "*.cache"

# Kubernetes Security Scanning
k8s_security:
  # Tools
  tools:
    - "kube-score"
    - "kubeaudit"
    - "kube-bench"
    - "polaris"
  
  # Scan options
  options:
    - "--output-format=json"
    - "--severity=high"
    - "--include-tests=security"

# Infrastructure Security Scanning
infrastructure_security:
  # Tools
  tools:
    - "checkov"
    - "tfsec"
    - "terrascan"
  
  # Scan targets
  targets:
    - "terraform/"
    - "docker-compose.yml"
    - "kubernetes/"
    - "ansible/"
  
  # Output formats
  output_formats:
    - "json"
    - "sarif"
    - "junit"

# Custom Security Rules
custom_rules:
  # File: security-rules/custom-security-rules.yml
  file: "security-rules/custom-security-rules.yml"
  
  # Rules categories
  categories:
    - "authentication"
    - "authorization"
    - "data-protection"
    - "input-validation"
    - "output-encoding"
    - "error-handling"
    - "logging"
    - "cryptography"
    - "session-management"
    - "file-upload"
    - "api-security"
    - "database-security"

# Security Policies
security_policies:
  # File: security-policies/security-policy.yml
  file: "security-policies/security-policy.yml"
  
  # Policy categories
  categories:
    - "vulnerability-management"
    - "dependency-management"
    - "secret-management"
    - "container-security"
    - "infrastructure-security"
    - "application-security"
    - "data-protection"
    - "incident-response"

# Reporting Configuration
reporting:
  # Output formats
  formats:
    - "json"
    - "sarif"
    - "html"
    - "pdf"
  
  # Report templates
  templates:
    - "security-reports/executive-summary.html"
    - "security-reports/technical-details.html"
    - "security-reports/remediation-guide.html"
  
  # Notification channels
  notifications:
    slack:
      webhook_url: "${SLACK_WEBHOOK_URL}"
      channel: "#security-alerts"
    
    email:
      smtp_server: "${SMTP_SERVER}"
      from: "security@chitlaq.com"
      to: ["security-team@chitlaq.com"]
    
    jira:
      url: "${JIRA_URL}"
      project_key: "SEC"
      issue_type: "Security Vulnerability"

# Scan Scheduling
scheduling:
  # Daily scans
  daily:
    time: "02:00"
    scans:
      - "dependency"
      - "container"
      - "infrastructure"
  
  # Weekly scans
  weekly:
    day: "sunday"
    time: "03:00"
    scans:
      - "full-application"
      - "penetration-test"
      - "compliance"
  
  # Monthly scans
  monthly:
    day: 1
    time: "04:00"
    scans:
      - "comprehensive-audit"
      - "red-team-exercise"

# Integration with CI/CD
cicd_integration:
  # GitHub Actions
  github_actions:
    workflow_file: ".github/workflows/security-scan.yml"
    triggers:
      - "push"
      - "pull_request"
      - "schedule"
  
  # Jenkins
  jenkins:
    pipeline_file: "Jenkinsfile.security"
    triggers:
      - "push"
      - "pull_request"
      - "schedule"
  
  # GitLab CI
  gitlab_ci:
    pipeline_file: ".gitlab-ci-security.yml"
    triggers:
      - "push"
      - "merge_request"
      - "schedule"

# Compliance Frameworks
compliance:
  frameworks:
    - "OWASP Top 10"
    - "CWE Top 25"
    - "NIST Cybersecurity Framework"
    - "ISO 27001"
    - "SOC 2"
    - "PCI DSS"
    - "GDPR"
    - "HIPAA"
  
  # Compliance reports
  reports:
    - "compliance-reports/owasp-compliance.json"
    - "compliance-reports/nist-compliance.json"
    - "compliance-reports/iso27001-compliance.json"

# Remediation
remediation:
  # Auto-fix options
  auto_fix:
    enabled: false
    rules:
      - "dependency-updates"
      - "code-formatting"
      - "security-headers"
  
  # Manual remediation
  manual_remediation:
    tracking_system: "jira"
    priority_mapping:
      critical: "P0"
      high: "P1"
      medium: "P2"
      low: "P3"
  
  # Remediation templates
  templates:
    - "remediation-templates/vulnerability-fix.md"
    - "remediation-templates/dependency-update.md"
    - "remediation-templates/configuration-fix.md"
